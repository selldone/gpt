{
  "openapi": "3.1.0",
  "info": {
    "title": "My shops",
    "description": "Get information about my business and sales on Selldone.",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://api.selldone.com"
    }
  ],
  "paths": {
    "/security/2fa/check": {
      "get": {
        "operationId": "Check2FA",
        "description": "Check user two-factor authentication is enabled? If the 'user' value is in response, it means the user successfully logged in. Otherwise, call Verify2FA",
        "parameters": [],
        "responses": {
          "200": {
            "description": "2FA status retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "user": {
                    "$ref": "#/components/schemas/User"
                  },
                  "has_2fa": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          }
        }
      }
    },
    "/auth/2fa": {
      "post": {
        "operationId": "Verify2FA",
        "description": "Request user to enter 6 digit number 2FA code if Check2FA does not return 'user' value in its response.",
        "parameters": [],
        "requestBody": {
          "description": "6-digit 2FA numeric code to verify access.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "pattern": "^[0-9]{6}$",
                    "description": "6-digit 2FA numeric code to verify access."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The 2FA code is valid an and now API calls are authenticated with this Bearer token.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "token_verified": true,
                  "user": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Incorrect 2FA Code"
          }
        }
      }
    },
    "/shops/me": {
      "get": {
        "operationId": "GetShops",
        "description": "Get the list of my shops",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Something about business name or its URL.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of shops retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "shops": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Shop"
                    },
                    "description": "List of my shops."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          }
        }
      }
    },
    "/shops/{shop_id}/products/{product_id}/admin": {
      "get": {
        "operationId": "GetProductInfo",
        "summary": "Get Product Information by Shop and Product ID",
        "description": "Returns information about the product by product ID and shop ID, including statistics for a specified time period. Request the user to input the URL for the product's admin page, formatted as 'https://selldone.com/shuttle/shop/{shop_id}/product/{product_id}/...,'",
        "parameters": [
          {
            "name": "shop_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier for the shop",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier for the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset days from now to get statistic information about product sell, inventory, finance, views, etc.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of days from the offset day to look back, i.e., the number of data records to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30
            }
          },
          {
            "name": "with_trashed",
            "in": "query",
            "description": "Include or exclude trashed (deleted) items in the response.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of product details and statistics for the specified shop and product",
            "content": {
              "application/json": {
                "example": {
                  "product": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductData"
                    }
                  },
                  "orderQue": {
                    "type": "array",
                    "items": {
                      "count": {
                        "type": "integer",
                        "description": "Number of orders in the queue."
                      },
                      "delivery_state": {
                        "type": "string",
                        "description": "Delivery state of the order."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the order."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier for the user."
          },
          "name": {
            "type": "string",
            "description": "The user's full name."
          },
          "email": {
            "type": "string",
            "description": "The user's email address."
          },
          "phone": {
            "type": "string",
            "description": "The user's phone number."
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user verified their email address."
          },
          "socials_login": {
            "$ref": "#/components/schemas/UserSocialLogin",
            "description": "Social login flags for the user."
          },
          "preferences": {
            "$ref": "#/components/schemas/UserPreferences",
            "description": "User preferences settings."
          },
          "interest": {
            "$ref": "#/components/schemas/UserInterest",
            "description": "User's interests grouped by categories."
          },
          "subscribed": {
            "type": "boolean",
            "description": "Indicates if the user is subscribed."
          },
          "block_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when the user was blocked."
          },
          "block_hours": {
            "type": "number",
            "description": "Duration (in hours) the user was last blocked. Used for calculating the next punishment period."
          },
          "ban": {
            "type": "string",
            "enum": [
              "BanLevel1",
              "BanLevel2",
              "BanLevel3"
            ],
            "description": "Ban level for the user."
          },
          "meta": {
            "type": "object",
            "description": "Key-value pairs for storing metadata (private). Used for keeping third-party customer IDs and other values."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was soft deleted."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was last updated."
          }
        }
      },
      "UserSocialLogin": {
        "type": "object",
        "properties": {
        }
      },
      "UserPreferences": {
        "type": "object",
        "properties": {
        }
      },
      "UserInterest": {
        "type": "object",
        "properties": {
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "number",
              "null"
            ],
            "description": "The unique identifier for the shop."
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The name of the shop."
          },
          "user_id": {
            "type": "number",
            "description": "The unique identifier for the user associated with the shop."
          },
          "home": {
            "$ref": "#/components/schemas/ShopHome",
            "description": "Represents the shop's homepage configuration."
          },
          "language": {
            "type": "string",
            "description": "The default language for the shop."
          },
          "title": {
            "type": "string",
            "description": "The title of the shop."
          },
          "description": {
            "type": "string",
            "description": "The description of the shop."
          },
          "icon": {
            "type": "string",
            "description": "The icon associated with the shop."
          },
          "fav": {
            "type": "string",
            "description": "The favorite icon for the shop."
          },
          "official": {
            "type": "boolean",
            "description": "Indicates if the shop is official."
          },
          "active": {
            "type": "boolean",
            "description": "Indicates if the shop is active."
          },
          "restriction": {
            "type": "string",
            "description": "The shop's access restriction setting."
          },
          "license": {
            "type": "string",
            "enum": [
              "License1",
              "License2",
              "License3"
            ],
            "description": "The licensing code for the shop."
          },
          "capacity": {
            "type": "number",
            "description": "The storage capacity of the shop in KB."
          },
          "expire_at": {
            "type": "string",
            "format": "date-time",
            "description": "The expiration date of the shop."
          },
          "info": {
            "$ref": "#/components/schemas/ShopInfo",
            "description": "Additional info about the shop."
          },
          "support_mode": {
            "type": "string",
            "description": "Support mode for the shop."
          },
          "support": {
            "type": "array",
            "items": {},
            "description": "Support details."
          },
          "address_verified": {
            "type": "boolean",
            "description": "Indicates if the address associated with the shop is verified."
          },
          "phone_verified": {
            "type": "boolean",
            "description": "Indicates if the phone number associated with the shop is verified."
          },
          "gold": {
            "type": "boolean",
            "description": "Indicates if the shop has a gold status."
          },
          "penalty": {
            "type": "boolean",
            "description": "Indicates if the shop has any penalties."
          },
          "purge_at": {
            "type": "string",
            "description": "The date when the shop and its content will be deleted."
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopOption"
            },
            "description": "Configuration options for the shop."
          },
          "domain": {
            "type": "string",
            "description": "The domain associated with the shop."
          },
          "currencies": {
            "type": "array",
            "items": {
              "enum": [
                "Currency1",
                "Currency2",
                "Currency3"
              ]
            },
            "description": "Supported currencies for the shop."
          },
          "footer": {
            "type": "array",
            "items": {},
            "description": "Configuration for the footer of the shop."
          },
          "theme": {
            "$ref": "#/components/schemas/ShopTheme",
            "description": "Theme configuration for the shop."
          },
          "avocado": {
            "type": "array",
            "items": {},
            "description": "Configuration for Avocado form."
          },
          "hyper": {
            "type": "array",
            "items": {},
            "description": "Configuration for Hyper."
          },
          "ribbon": {
            "$ref": "#/components/schemas/ShopRibbon",
            "description": "Configuration for Ribbon. Its the default behavior of subscription products."
          },
          "marketplace": {
            "type": "array",
            "items": {},
            "description": "Configuration for the marketplace."
          },
          "model": {
            "type": "string",
            "description": "The business model of the shop."
          },
          "local": {
            "$ref": "#/components/schemas/Domain",
            "description": "Domain details for local configuration."
          },
          "sub": {
            "$ref": "#/components/schemas/Domain",
            "description": "Domain details for sub-domain configuration."
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Supported countries for the shop."
          },
          "lottery": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Information regarding the lottery."
          },
          "tax": {
            "type": "array",
            "items": {},
            "description": "Tax information for the shop."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date of the shop."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The last updated date for the shop."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The deletion date for the shop."
          },
          "client_id": {
            "type": "number",
            "description": "Agency client ID associated with the shop."
          },
          "drop_shipping": {
            "type": "boolean",
            "description": "Indicates if the shop operates in dropshipping mode."
          },
          "dropShipping_products": {
            "type": "number",
            "description": "The number of dropshipping products."
          },
          "dropShipping_sells": {
            "type": "number",
            "description": "The number of dropshipping products sold."
          },
          "dropShipping_score": {
            "type": "number",
            "description": "The dropshipping score for the shop."
          },
          "shop_exchange_rates": {
            "type": "array",
            "items": {},
            "description": "Shop exchange rates."
          }
        }
      },
      "ShopHome": {
        "type": "string",
        "enum": [
          "blog",
          "avocado",
          "hyper",
          "community",
          "shop",
          "map",
          "landing_page"
        ],
        "description": "Represents the shop's homepage configuration."
      },
      "ShopInfo": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "nullable": true,
            "description": "The location of the shop."
          },
          "daysOpen": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Days when the shop is open."
          },
          "times": {
            "type": "string",
            "nullable": true,
            "description": "Opening times of the shop."
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "The address of the shop."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "The email address of the shop."
          },
          "country": {
            "type": "string",
            "nullable": true,
            "description": "The country of the shop."
          },
          "postalCode": {
            "type": "string",
            "nullable": true,
            "description": "The postal code of the shop."
          },
          "countryCode": {
            "type": "string",
            "nullable": true,
            "description": "The country code of the shop."
          },
          "region": {
            "type": "string",
            "nullable": true,
            "description": "The region of the shop."
          },
          "locality": {
            "type": "string",
            "nullable": true,
            "description": "The locality of the shop."
          },
          "days_open": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "nullable": true,
            "description": "Days when the shop is open based on the WeekDays enum."
          }
        },
        "description": "Additional info about the shop."
      },
      "ShopOption": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code for the shop option."
          },
          "value": {
            "type": "array",
            "items": {
              "code": {
                "type": "string",
                "description": "The code for the shop option."
              },
              "value": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ],
                "description": "The value for the shop option."
              }
            },
            "description": "The custom options of shop."
          }
        }
      },
      "ShopTheme": {
        "type": "object",
        "properties": {
          "color_light": {
            "type": "string"
          },
          "color_dark": {
            "type": "string"
          },
          "color_deep_dark": {
            "type": "string"
          },
          "color_info": {
            "type": "string"
          },
          "color_buy": {
            "type": "string"
          },
          "color_bill": {
            "type": "string"
          },
          "light_checkout": {
            "type": "boolean"
          },
          "light_header": {
            "type": "boolean"
          },
          "light_footer": {
            "type": "boolean"
          },
          "light_filter": {
            "type": "boolean"
          },
          "mobile": {
            "type": "string"
          },
          "tablet": {
            "type": "string"
          },
          "pc": {
            "type": "string"
          },
          "static": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "hover_actions": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "only_available": {
            "type": "boolean"
          },
          "smart_price": {
            "type": "boolean"
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "font_family": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "font_res": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "reverse_currency": {
            "type": "boolean"
          },
          "logo": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo_w": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo_h": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "css": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "description": "Shop theme configuration."
      },
      "ShopRibbon": {
        "type": "object",
        "properties": {
          "shipping": {
            "type": "boolean",
            "description": "Ask for shipping address"
          },
          "billing": {
            "type": "boolean",
            "description": "Ask for billing address"
          },
          "cart": {
            "type": "boolean",
            "description": "Car mode (add multiple subscriptions to cart)"
          },
          "count": {
            "type": "boolean",
            "description": "User can buy more than one subscription per product."
          }
        },
        "description": "Subscription selling configuration in the shop."
      },
      "Domain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for the domain."
          },
          "shop_id": {
            "type": "number",
            "description": "Identifier of the associated shop."
          },
          "primary": {
            "type": "boolean",
            "description": "Indicates if this is the primary domain for the shop."
          },
          "indexed": {
            "type": "boolean",
            "description": "Indicates if the domain is indexed."
          },
          "domain": {
            "type": "string",
            "description": "The domain name."
          },
          "home": {
            "type": [
              "string",
              "null"
            ],
            "description": "Domain home page (can be null, a page_id, 'avocado', or 'blog')."
          },
          "approved": {
            "type": "boolean",
            "description": "Indicates if the domain is approved."
          },
          "enable": {
            "type": "boolean",
            "description": "Indicates if the domain is enabled."
          },
          "expire_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date and time when the domain expires."
          },
          "ssl_proxy": {
            "type": "boolean",
            "description": "Indicates if the domain was added via SSL proxy IPs."
          },
          "ssl": {
            "type": "boolean",
            "description": "Indicates the health status of domain SSL."
          },
          "issue_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Last date and time when a request was sent to issue SSL by SSL proxy."
          },
          "check_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Last date and time when the domain was checked."
          },
          "https": {
            "type": "boolean",
            "description": "Indicates if http should be forced to https."
          },
          "error": {
            "type": [
              "string",
              "null"
            ],
            "description": "Last error message, if any."
          },
          "affiliate_id": {
            "type": "number",
            "description": "Identifier of the attached affiliate."
          },
          "info": {
            "type": [
              "array",
              "null"
            ],
            "description": "Additional domain information provided by the user."
          },
          "debug": {
            "type": [
              "array",
              "null"
            ],
            "description": "Debug details for selldone admin."
          },
          "certificate": {
            "type": [
              "array",
              "null"
            ],
            "description": "Certificate information (see SSLCertificate)."
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date and time when the domain was created."
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date and time when the domain was last updated."
          }
        },
        "description": "Information about shop main domain."
      },
      "Product": {
        "type": "object",
        "required": [
          "id",
          "shop_id",
          "currency",
          "commission",
          "condition",
          "price"
        ],
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for the product."
          },
          "shop_id": {
            "type": "number",
            "description": "Identifier for the shop owning the product."
          },
          "action": {
            "type": "string",
            "description": "Product buy call to action."
          },
          "ar": {
            "$ref": "#/components/schemas/Product.IAR",
            "description": "AR 3D model, created by the system."
          },
          "badges": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "number"
            },
            "description": "Array of badge identifiers associated with the product."
          },
          "best_content": {
            "type": "boolean",
            "description": "Indicates if product has great ranked content."
          },
          "best_seller": {
            "type": "boolean",
            "description": "Indicates if this is the bestseller product."
          },
          "blog": {
            "type": "string",
            "description": "Link to external resources shown on the product page."
          },
          "brand": {
            "type": "string",
            "description": "Brand name of the product."
          },
          "category_id": {
            "type": "number",
            "description": "Identifier for the product's category."
          },
          "commission": {
            "type": "number",
            "default": 0,
            "description": "Commission on the product."
          },
          "condition": {
            "type": "string",
            "default": "NEW",
            "description": "Condition of the product, e.g., 'NEW', 'USED', 'REFURBISHED'."
          },
          "connect_id": {
            "type": "number",
            "description": "Identifier for the connect provider that created this product."
          },
          "cons": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of disadvantages."
          },
          "currency": {
            "type": "string",
            "description": "Currency code, e.g., 'USD', 'EUR'."
          },
          "dis_end": {
            "type": [
              "string",
              "null"
            ],
            "description": "End date for the product discount."
          },
          "dis_start": {
            "type": [
              "string",
              "null"
            ],
            "description": "Start date for the product discount."
          },
          "discount": {
            "type": "number",
            "description": "Discount amount on the product."
          },
          "extra": {
            "$ref": "#/components/schemas/Product.IExtra",
            "description": "Additional product details."
          },
          "for_auction": {
            "type": "number",
            "description": "Total users waiting for auction."
          },
          "for_available": {
            "type": "number",
            "description": "Total users waiting for availability."
          },
          "gpc": {
            "type": "string",
            "description": "Global Product Classification code."
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number."
          },
          "guide_id": {
            "type": "number",
            "description": "Assigned guide profile ID shown on the product page."
          },
          "hsn": {
            "type": "string",
            "description": "Harmonized System Nomenclature code for international trade."
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Input form structure for extra information about purchased product."
          },
          "lead": {
            "type": "string",
            "description": "Lead time required for the product."
          },
          "map_id": {
            "type": "number",
            "description": "Assigned location tag on the map."
          },
          "message": {
            "type": "string",
            "description": "Note shown to the customer in the product and basket page."
          },
          "mpn": {
            "type": "string",
            "description": "Manufacturer Part Number for the product."
          },
          "note": {
            "type": "any",
            "description": "General note or additional information about the product."
          },
          "officer": {
            "type": "number",
            "description": "Officer user id, the user who creates this product."
          },
          "order": {
            "type": "number",
            "description": "Order index to custom sort products."
          },
          "original": {
            "type": "boolean",
            "description": "Indicates if the product is original."
          },
          "outputs": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Output form structure for virtual items purchase."
          },
          "parent_id": {
            "type": "number",
            "description": "For middle sellers, the main product in drop-shipping supplier store."
          },
          "price": {
            "type": "number",
            "description": "Price of the product."
          },
          "price_input": {
            "$ref": "#/components/schemas/Product.PriceInputType",
            "description": "Type of input used for the product price."
          },
          "price_label": {
            "type": "string",
            "description": "Extra info about price (e.g., $1.5/Fl Oz)."
          },
          "pricing": {
            "$ref": "#/components/schemas/Product.ProductPricing",
            "description": "Pricing strategy for the product."
          },
          "pros": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of advantages or positive aspects."
          },
          "quantity": {
            "type": "number",
            "description": "Available quantity of the product."
          },
          "rate": {
            "type": "number",
            "description": "Average rating of the product."
          },
          "rate_count": {
            "type": "number",
            "description": "Total number of buyers who rated this product."
          },
          "repository_id": {
            "type": "number",
            "description": "Identifier for the products repository this product was created from."
          },
          "reselling": {
            "type": "boolean",
            "description": "Indicates if the product is available for drop-shipping."
          },
          "reselling_count": {
            "type": "number",
            "description": "Total number of products sold by resellers."
          },
          "reselling_shops": {
            "type": "number",
            "description": "Total number of shops reselling this product."
          },
          "return_policy_id": {
            "type": "number",
            "description": "Assigned return policy profile ID."
          },
          "return_warranty": {
            "type": "number",
            "description": "Duration in hours to return goods after receiving order by buyer."
          },
          "ribbon": {
            "$ref": "#/components/schemas/Product.IRibbon",
            "description": "Ribbon configurations."
          },
          "sells": {
            "type": "number",
            "description": "Total sales of this product."
          },
          "shipping": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "number"
            },
            "description": "Custom shipping price for drop-shipping suppliers."
          },
          "shipping_id": {
            "type": "number",
            "description": "Assigned shipping profile ID."
          },
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit identifier for the product."
          },
          "slug": {
            "type": "string",
            "description": "Slug to create SEO friendly URL."
          },
          "spec": {
            "$ref": "#/components/schemas/Product.ISpec",
            "description": "Product specifications as key/value pairs."
          },
          "spec_order": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "description": "Order of items in the spec table."
          },
          "status": {
            "$ref": "#/components/schemas/Product.ProductStatus",
            "description": "Availability of the product, e.g., 'Open', 'Close'."
          },
          "style": {
            "type": "object",
            "properties": {
              "contain": {
                "type": "boolean"
              }
            },
            "description": "Style of the product."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of product tags."
          },
          "tax_id": {
            "type": "number",
            "description": "Assigned tax profile ID."
          },
          "title": {
            "type": "string",
            "description": "Title of the product."
          },
          "title_en": {
            "type": "string",
            "description": "Subtitle of the product, preferably in English."
          },
          "type": {
            "$ref": "#/components/schemas/Product.ProductType",
            "description": "Type of product."
          },
          "unit": {
            "type": "string",
            "description": "Custom product unit, e.g., cm, litre, bottle."
          },
          "unit_float": {
            "type": "boolean",
            "description": "Indicates if a fractional unit can be ordered, e.g., 3.5 kg of fruit."
          },
          "valuation_id": {
            "type": "number",
            "description": "Identifier for the valuation method used."
          },
          "variants": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Product.IVariant"
            },
            "description": "List of product variants."
          },
          "vendor_id": {
            "type": "number",
            "description": "Identifier for the vendor of the product."
          },
          "video": {
            "type": "string",
            "description": "Youtube video ID for the product."
          },
          "visits": {
            "type": "number",
            "description": "Total number of visits to the product page."
          },
          "warranty": {
            "type": "string",
            "description": "Short warranty condition and name."
          },
          "warranty_id": {
            "type": "number",
            "description": "Assigned warranty profile ID."
          },
          "locations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Specific locations associated with the product."
          },
          "icon": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional icon for the product."
          }
        }
      },
      "Product.ProductType": {
        "type": "string",
        "enum": [
          "PHYSICAL",
          "VIRTUAL",
          "SERVICE",
          "FILE",
          "SUBSCRIPTION"
        ]
      },
      "Product.PriceInputType": {
        "type": "string",
        "enum": [
          "default",
          "area",
          "volume",
          "custom"
        ]
      },
      "Product.ProductPricing": {
        "type": "string",
        "enum": [
          "FIX",
          "ESTIMATION",
          "AGREEMENT",
          "BID"
        ]
      },
      "Product.ProductCondition": {
        "type": "string",
        "enum": [
          "new",
          "refurbished",
          "used",
          "used_fair",
          "used_good",
          "used_like_new"
        ]
      },
      "Product.ProductStatus": {
        "type": "string",
        "enum": [
          "Open",
          "Close",
          "Pending",
          "Rejected"
        ]
      },
      "Product.ISpec": {
        "type": "object",
        "description": "A JSON of key/value pairs representing the product specifications.",
        "properties": {
        },
        "additionalProperties": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "enum": [
                "group"
              ]
            }
          ]
        }
      },
      "Product.IVariant": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "style": {
            "type": [
              "string",
              "null"
            ]
          },
          "volume": {
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": "string"
          },
          "pack": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Product.IRibbon": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "enum",
            "enum": [
              "SubBox",
              "Membership",
              "SubPhysical",
              "SubVirtual",
              "SubFile",
              "SubService"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "number"
                },
                "variant_id": {
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "count": {
                  "type": "number"
                }
              }
            }
          },
          "billing": {
            "type": "boolean"
          },
          "shipping": {
            "type": "boolean"
          },
          "count": {
            "type": "boolean"
          }
        }
      },
      "Product.IAR": {
        "type": "object",
        "properties": {
          "src_file": {
            "type": [
              "string",
              "null"
            ]
          },
          "src": {
            "type": [
              "string",
              "null"
            ]
          },
          "size_src": {
            "type": [
              "string",
              "null"
            ]
          },
          "name_src": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Product.IExtra": {
        "type": "object",
        "properties": {
          "width": {
            "type": [
              "number",
              "null"
            ]
          },
          "length": {
            "type": [
              "number",
              "null"
            ]
          },
          "height": {
            "type": [
              "number",
              "null"
            ]
          },
          "weight": {
            "type": [
              "number",
              "null"
            ]
          }
        }
      },
      "ProductData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for the data entry."
          },
          "product_id": {
            "type": "number",
            "description": "ID of the associated product."
          },
          "price": {
            "type": "number",
            "description": "Price of the product in Rial."
          },
          "count": {
            "type": "number",
            "description": "Total quantity of items."
          },
          "sell": {
            "type": "number",
            "description": "Total number of products sold."
          },
          "send": {
            "type": "number",
            "description": "Total number of products sent."
          },
          "views": {
            "type": "number",
            "description": "Total number of product views."
          },
          "likes": {
            "type": "number",
            "description": "Total number of likes for the product."
          },
          "powers": {
            "type": "number",
            "description": "Some property related to the power metric of the product."
          },
          "favorites": {
            "type": "number",
            "description": "Total number of times the product has been favorited."
          },
          "wishlist": {
            "type": "number",
            "description": "Total number of times the product has been added to wishlists."
          },
          "comments": {
            "type": "number",
            "description": "Total number of comments on the product."
          },
          "comments_approved": {
            "type": "number",
            "description": "Total number of approved comments on the product."
          },
          "ratings": {
            "type": "number",
            "description": "Total number of ratings for the product."
          },
          "rating_star": {
            "type": "number",
            "description": "Average star rating of the product (ranges from 1 to 5)."
          },
          "reselling_shops": {
            "type": "number",
            "description": "Number of shops reselling the product."
          },
          "reselling_count": {
            "type": "number",
            "description": "Count related to reselling of the product."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the record was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the record was last updated."
          }
        }
      }
    }
  }
}
